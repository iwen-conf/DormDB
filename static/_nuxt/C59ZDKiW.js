var h=Object.defineProperty;var m=(n,e,t)=>e in n?h(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>m(n,typeof e!="symbol"?e+"":e,t);import{i as u,A as r}from"./BwY6AjUB.js";import{a3 as c}from"./BeQt8jzg.js";class l{constructor(){a(this,"_baseURL");a(this,"_apiVersion")}get baseURL(){if(!this._baseURL){const e=c();this._baseURL=e.public.apiBaseUrl}return this._baseURL}get apiVersion(){if(!this._apiVersion){const e=c();this._apiVersion=e.public.apiVersion}return this._apiVersion}getFullUrl(e){return`${this.baseURL}/api/${this.apiVersion}${e}`}async makeRequest(e,t={}){const s=this.getStoredToken(),d={"Content-Type":"application/json",...t.headers};s&&!u(s)&&(d.Authorization=`Bearer ${s}`);try{const i=await(await fetch(this.getFullUrl(e),{...t,headers:d})).json();if(i.code===0)return i.data;throw new r(i.code,i.message)}catch(o){throw o instanceof r?o:new r(-1,"网络请求失败")}}getStoredToken(){return typeof localStorage<"u"?localStorage.getItem("dormdb_token"):null}setStoredToken(e){typeof localStorage<"u"&&localStorage.setItem("dormdb_token",e)}removeStoredToken(){typeof localStorage<"u"&&localStorage.removeItem("dormdb_token")}async healthCheck(){return this.makeRequest("/health")}async applyDatabase(e){return this.makeRequest("/apply",{method:"POST",body:JSON.stringify({identity_key:e})})}async adminLogin(e){const t=await this.makeRequest("/admin/login",{method:"POST",body:JSON.stringify({password:e})}),s=JSON.parse(t);return this.setStoredToken(s.token),s}async adminLogout(){this.removeStoredToken()}async getSystemStatus(){return this.makeRequest("/admin/status")}async getStudentIds(e=100,t=0){return this.makeRequest(`/admin/student-ids?limit=${e}&offset=${t}`)}async addStudentId(e,t,s){return this.makeRequest("/admin/student-ids",{method:"POST",body:JSON.stringify({student_id:e,student_name:t,class_info:s})})}async batchImportStudentIds(e,t=!1){return this.makeRequest("/admin/student-ids/batch-import",{method:"POST",body:JSON.stringify({student_data:e,overwrite_existing:t})})}async deleteStudentId(e){return this.makeRequest(`/admin/student-ids/${e}`,{method:"DELETE"})}isAuthenticated(){const e=this.getStoredToken();return e!==null&&!u(e)}}const y=new l;export{l as ApiClient,y as apiClient};
